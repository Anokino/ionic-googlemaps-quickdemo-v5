{"version":3,"sources":["../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/index.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/bootstrap.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/common.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/cordova-function-override.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/cordova-instance.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/cordova-property.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/cordova.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/instance-property.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/decorators/interfaces.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/index.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/ionic-native-plugin.js","../ionic-native-google-maps/dist/@ionic-native/plugins/google-maps/node_modules/@ionic-native/core/util.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/index.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/AsyncSubject.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/BehaviorSubject.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/InnerSubscriber.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Notification.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Observable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Observer.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/OuterSubscriber.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/ReplaySubject.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Scheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Subject.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/SubjectSubscription.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Subscriber.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/Subscription.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/config.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/ConnectableObservable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/combineLatest.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/concat.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/defer.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/empty.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/forkJoin.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/from.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromArray.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromIterable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromObservable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/fromPromise.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/generate.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/iif.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/interval.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/merge.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/never.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/of.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/pairs.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/race.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/range.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/scalar.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/throwError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/timer.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/using.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/observable/zip.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/concatAll.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/groupBy.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/map.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/mergeAll.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/mergeMap.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/observeOn.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/operators/refCount.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/Action.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/asap.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/async.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/scheduler/queue.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/symbol/iterator.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/symbol/observable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/symbol/rxSubscriber.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/ArgumentOutOfRangeError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/EmptyError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/Immediate.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/ObjectUnsubscribedError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/TimeoutError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/UnsubscriptionError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/canReportError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/hostReportError.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/identity.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isArray.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isArrayLike.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isFunction.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isInteropObservable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isIterable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isNumeric.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isObject.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isObservable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isPromise.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/isScheduler.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/noop.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/pipe.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeTo.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeToArray.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeToObservable.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeToPromise.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js","../ionic-native-google-maps/node_modules/rxjs/_esm2015/internal/util/toSubscriber.js","./src/app/map.service.ts"],"names":[],"mappings":"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CA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,iBAAiB;AACxC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,kBAAkB;AACzC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,oEAAiB;AACG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,qEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,qEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA,eAAe,qEAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA,eAAe,qEAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA,eAAe,qEAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA,eAAe,qEAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA,eAAe,qEAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,0BAA0B,OAAO;AACjC,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB,uBAAuB;AACvB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,qEAAU;AAClG;AACA;AACA;AACA;AACA;AACA,mCAAmC,0CAA0C;AAC7E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ,0EAAe,mBAAmB,aAAa;AACjH,0EAA0E,QAAQ,0EAAe,wBAAwB,aAAa;AACtI,uFAAuF,QAAQ,0EAAe,qCAAqC,eAAe,aAAa;AAC/K,0EAA0E,QAAQ,0EAAe,qCAAqC,eAAe,aAAa;AAClK,oFAAoF,QAAQ,0EAAe,kCAAkC,eAAe,aAAa;AACzK,uEAAuE,QAAQ,0EAAe,kCAAkC,eAAe,aAAa;AAC5J,mFAAmF,QAAQ,0EAAe,iCAAiC,eAAe,aAAa;AACvK,sEAAsE,QAAQ,0EAAe,iCAAiC,eAAe,aAAa;AAC1J,kFAAkF,QAAQ,0EAAe,gCAAgC,eAAe,aAAa;AACrK,qEAAqE,QAAQ,0EAAe,gCAAgC,eAAe,aAAa;AACxJ,yDAAyD,QAAQ,0EAAe,oBAAoB,eAAe,aAAa;AAChI,4DAA4D,QAAQ,0EAAe,uBAAuB,eAAe,aAAa;AACtI,0DAA0D,QAAQ,0EAAe,qBAAqB,eAAe,aAAa;AAClI,4DAA4D,QAAQ,0EAAe,uBAAuB,eAAe,aAAa;AACtI,uDAAuD,QAAQ,0EAAe,mBAAmB,aAAa;AAC9G;AACA;AACA;AACA,CAAC;AAC6B;AAC9B;AACA;AACA;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qEAAU;AACtF;AACA;AACA;AACA;AACA;AACA,mCAAmC,0CAA0C;AAC7E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA,4BAA4B,qEAAU;AACtC;AACA,mCAAmC,0CAA0C;AAC7E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,QAAQ,0EAAe,kBAAkB,eAAe,aAAa;AACnH,6DAA6D,QAAQ,0EAAe,wBAAwB,eAAe,aAAa;AACxI,mEAAmE,QAAQ,0EAAe,0BAA0B,aAAa;AACjI,2DAA2D,QAAQ,0EAAe,gCAAgC,aAAa;AAC/H,4DAA4D,QAAQ,0EAAe,iCAAiC,aAAa;AACjI,gEAAgE,QAAQ,0EAAe,uBAAuB,aAAa;AAC3H,wDAAwD,QAAQ,0EAAe,6BAA6B,aAAa;AACzH,yDAAyD,QAAQ,0EAAe,8BAA8B,aAAa;AAC3H,yDAAyD,QAAQ,0EAAe,6BAA6B,eAAe,aAAa;AACzI,uDAAuD,QAAQ,0EAAe,2BAA2B,eAAe,aAAa;AACrI,qDAAqD,QAAQ,0EAAe,yBAAyB,eAAe,aAAa;AACjI,wDAAwD,QAAQ,0EAAe,4BAA4B,eAAe,aAAa;AACvI,qDAAqD,QAAQ,0EAAe,yBAAyB,eAAe,aAAa;AACjI,6DAA6D,QAAQ,0EAAe,2BAA2B,eAAe,aAAa;AAC3I,8DAA8D,QAAQ,0EAAe,yBAAyB,eAAe,aAAa;AAC1I,8DAA8D,QAAQ,0EAAe,yBAAyB,eAAe,aAAa;AAC1I,+DAA+D,QAAQ,0EAAe,4BAA4B,eAAe,aAAa;AAC9I,iDAAiD,QAAQ,0EAAe,iBAAiB,eAAe,aAAa;AACrH,wDAAwD,QAAQ,0EAAe,4BAA4B,eAAe,aAAa;AACvI,4DAA4D,QAAQ,0EAAe,0BAA0B,aAAa;AAC1H,+DAA+D,QAAQ,0EAAe,wBAAwB,eAAe,aAAa;AAC1I,8CAA8C,QAAQ,0EAAe,mBAAmB,aAAa;AACrG;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,uBAAuB,qEAAU;AACjC,6DAA6D,kBAAkB,EAAE;AACjF,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,+DAA+D,QAAQ,0EAAe,8BAA8B,aAAa;AACjI,8DAA8D,QAAQ,0EAAe,8BAA8B,aAAa;AAChI,mEAAmE,QAAQ,0EAAe,gCAAgC,eAAe,aAAa;AACtJ,yEAAyE,QAAQ,0EAAe,sCAAsC,eAAe,aAAa;AAClK,0DAA0D,QAAQ,0EAAe,+BAA+B,aAAa;AAC7H,+DAA+D,QAAQ,0EAAe,4BAA4B,eAAe,aAAa;AAC9I,gEAAgE,QAAQ,0EAAe,6BAA6B,eAAe,aAAa;AAChJ,gEAAgE,QAAQ,0EAAe,6BAA6B,eAAe,aAAa;AAChJ,oEAAoE,QAAQ,0EAAe,iCAAiC,eAAe,aAAa;AACxJ,yDAAyD,QAAQ,0EAAe,sBAAsB,eAAe,aAAa;AAClI,0EAA0E,QAAQ,0EAAe,sBAAsB,eAAe,aAAa;AACnJ,yDAAyD,QAAQ,0EAAe,sBAAsB,eAAe,aAAa;AAClI;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBA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AA6C;AACtC,iCAAiC;AACjC,gCAAgC;AAChC;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA,KAAK;AACL;AACA;AACA,0BAA0B,WAAW;AACrC,eAAe,+CAAU;AACzB;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,WAAW,sDAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAU;AACjC;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACtbA;AAAA;AAAA;AAAA;AAAkC;AACsB;AACxD;AACA,eAAe,+CAAU;AACzB,gCAAgC,iEAAiB;AACjD;AACA,mCAAmC,yDAAS;AAC5C;AACA,gCAAgC,qDAAqD,EAAE,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,qD;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAwC;AACjC;AACP;AACA,WAAW,4DAAY;AACvB;AACA,4C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAwD;AACjD;AACP,QAAQ,iEAAiB;AACzB,eAAe,yDAAS;AACxB;AACA;AACA;AACO;AACP,QAAQ,iEAAiB;AACzB,QAAQ,yDAAS;AACjB;AACA;AACA,4C;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAgC;AACzB;AACP,WAAW,oDAAI;AACf;AACA,mC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;ACXA,sC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AAC1D;AACgG;AAC3D;AACkB;AACT;AACA;AACC;AACP;AACxC,6DAAU;AACV,iC;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAwD;AAC3B;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,4EAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,+C;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,8BAA8B,yBAAyB,GAAG;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gmD;AACiC;AACnB;AACP;AACb;AACgB;AACJ;AACF;AACW;AACG;AACA;AAC2B;AACA;AAC/C;AACM;AACJ;AACI;AACX;AACA;AACQ;AACQ;AACsB;AAC1B;AAC0B;AACR;AACd;AACM;AACQ;AACN;AACd;AACF;AACA;AACM;AACR;AACU;AACc;AAChB;AACV;AACU;AACN;AACA;AACN;AAC8B;AACxB;AACF;AACE;AACU;AACV;AACA;AACJ;AACI;AACA;AACT;AAC3C,iC;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAoC;AACU;AACvC,2BAA2B,gDAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0DAAY;AAC/B;AACA;AACA;AACA;AACA,mBAAmB,0DAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAoC;AACqC;AAClE,8BAA8B,gDAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;AChCA;AAAA;AAAA;AAA0C;AACnC,8BAA8B,sDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACN;AACgB;AAC9C;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAE;AACzB;AACA,uBAAuB,yEAAU;AACjC;AACA,uBAAuB,+DAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACJ;AAC6B;AACpC;AACV;AAC3B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,qBAAqB,uEAAY;AACjC;AACA;AACA;AACA;AACA,qCAAqC,8CAAM;AAC3C;AACA;AACA;AACA,YAAY,8CAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAM;AACtB;AACA;AACA;AACA,gBAAgB,2EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,KAAK,sEAAiB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAkC;AACuB;AAClD;AACP;AACA,iBAAiB,EAAE;AACnB;AACA,YAAY,8CAAM;AAClB;AACA;AACA;AACA,YAAY,6EAAe;AAC3B;AACA,KAAK;AACL,gBAAgB;AAChB;AACA,oC;;;;;;;;;;;;ACfA;AAAA;AAAA;AAA0C;AACnC,8BAA8B,sDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACM;AACI;AACc;AACa;AACb;AACrD,4BAA4B,gDAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,+BAA+B,wEAAmB;AAClD;AACA;AACA,4CAA4C,wEAAmB;AAC/D;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACvGA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACA;AACI;AAC2B;AACb;AACyB;AAC9E,gCAAgC,sDAAU;AACjD;AACA;AACA;AACA;AACA;AACO,sBAAsB,sDAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0EAAkB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qFAAuB;AAC7C;AACA;AACA;AACA,mBAAmB,0DAAY;AAC/B;AACA;AACA;AACA,mBAAmB,0DAAY;AAC/B;AACA;AACA;AACA,uBAAuB,wEAAmB;AAC1C;AACA;AACA;AACA,+BAA+B,sDAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,mBAAmB,0DAAY;AAC/B;AACA;AACA;AACA,mC;;;;;;;;;;;;AC/IA;AAAA;AAAA;AAA8C;AACvC,kCAAkC,0DAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACK;AACN;AACuC;AACnD;AACuB;AAClD,yBAAyB,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+CAAa;AAChD;AACA;AACA;AACA,uCAAuC,+CAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0EAAkB,KAAK,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+CAAa;AAChD;AACA,oBAAoB,mEAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,iBAAiB,8CAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,wCAAwC,GAAG,8CAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA,qBAAqB,8CAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAM;AACtB;AACA;AACA;AACA,gBAAgB,6EAAe;AAC/B;AACA;AACA;AACA;AACA,aAAa,8CAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAM;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC/NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACE;AACI;AACkB;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kDAAkD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAU;AACtB;AACA;AACA;AACA;AACA;AACA,sCAAsC,6EAAmB;AACzD;AACA;AACA,YAAY,6DAAO;AACnB;AACA;AACA;AACA;AACA,oBAAoB,+DAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6EAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oEAAoE,6EAAmB;AACvF;AACA,wC;;;;;;;;;;;;AC3IA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kC;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACJ;AACA;AACI;AACyB;AACjE,oCAAoC,sDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0DAAY;AAC5D;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAmB;AAClC;AACA;AACA;AACO;AACP,eAAe,cAAc;AAC7B,gBAAgB,2BAA2B;AAC3C,eAAe,8BAA8B;AAC7C,kBAAkB,8BAA8B;AAChD,iBAAiB,qCAAqC;AACtD,kBAAkB,sDAAsD;AACxE,iBAAiB,qCAAqC;AACtD,cAAc,kCAAkC;AAChD,eAAe;AACf;AACA,oCAAoC,0DAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;ACjIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACR;AACiB;AACd;AACQ;AAC3C;AACP;AACA,YAAY,qEAAW;AACvB;AACA;AACA;AACA,oFAAoF,0DAAG,WAAW,6DAAO;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAU;AAC7B;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,mCAAmC;AAC9C,SAAS,UAAU;AACnB;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,wC;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACR;AACiB;AACN;AACR;AACnC;AACP;AACA,YAAY,qEAAW;AACvB;AACA;AACA;AACA,wFAAwF,0DAAG,SAAS,6DAAO;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAU;AAC7B,mBAAmB,UAAU;AAC7B,iBAAiB,UAAU;AAC3B;AACA;AACA,mDAAmD,0DAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,8BAA8B;AACtF;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,gCAAgC;AAC3C;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,4C;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACR;AACW;AACS;AACtB;AACxC;AACO;AACP;AACA;AACA,QAAQ,qEAAW;AACnB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6DAAO;AAC3C;AACA;AACA,WAAW,4DAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,gEAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA,yBAAyB,iFAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAA0B;AACyB;AAC5C;AACP,WAAW,sEAAS,GAAG,8CAAE;AACzB;AACA,kC;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACb;AACE;AACzB;AACP,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAI,UAAU,oDAAK;AAClD;AACA,KAAK;AACL;AACA,iC;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACpC,kBAAkB,sDAAU;AAC5B;AACP;AACA;AACO;AACP,eAAe,sDAAU;AACzB;AACA,iC;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AACV;AAC8B;AACT;AACd;AAChC;AACP;AACA;AACA;AACA;AACA,gCAAgC,6DAAO;AACvC;AACA;AACA;AACA,eAAe,4CAAK;AACpB;AACA;AACA,sCAAsC,0DAAG;AACzC;AACA,eAAe,sDAAU;AACzB;AACA,KAAK;AACL;AACA,iCAAiC,gEAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA,sCAAsC,iFAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AACI;AACgB;AAClB;AACR;AACI;AACE;AACI;AACA;AAC3C;AACP;AACA,6BAA6B,sDAAU;AACvC;AACA;AACA,mBAAmB,sDAAU,CAAC,qEAAW;AACzC;AACA;AACA,YAAY,qFAAmB;AAC/B,mBAAmB,sEAAc;AACjC;AACA,iBAAiB,iEAAS;AAC1B,mBAAmB,gEAAW;AAC9B;AACA,iBAAiB,qEAAW;AAC5B,mBAAmB,4DAAS;AAC5B;AACA,iBAAiB,mEAAU;AAC3B,mBAAmB,kEAAY;AAC/B;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACa;AACrD;AACP;AACA,mBAAmB,sDAAU,CAAC,+EAAgB;AAC9C;AACA;AACA,mBAAmB,sDAAU;AAC7B,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,qC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AACM;AACT;AACvC;AACO;AACP,QAAQ,mEAAU;AAClB;AACA;AACA;AACA;AACA,0DAA0D,0DAAG,SAAS,6DAAO;AAC7E;AACA,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACD;AACM;AACT;AAChC;AACP;AACA,gEAAgE,0DAAG,SAAS,6DAAO;AACnF;AACA,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mEAAU;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA,4C;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACkB;AACC;AAC3D;AACP;AACA;AACA;AACA;AACA,mBAAmB,sDAAU,CAAC,qFAAmB;AACjD;AACA;AACA,mBAAmB,sDAAU;AAC7B,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,yDAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,wC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACwB;AACD;AAC/D;AACP;AACA,mBAAmB,sDAAU,CAAC,yFAAqB;AACnD;AACA;AACA,mBAAmB,sDAAU;AAC7B,4BAA4B,0DAAY;AACxC;AACA,yCAAyC,6DAAiB;AAC1D;AACA,iCAAiC,2DAA2D,EAAE;AAC9F,gCAAgC,0DAA0D,EAAE;AAC5F,gCAAgC,0DAA0D,EAAE;AAC5F,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,0C;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACiB;AACzD;AACP;AACA,mBAAmB,sDAAU,CAAC,mFAAkB;AAChD;AACA;AACA,mBAAmB,sDAAU;AAC7B,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,uC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACC;AACM;AAC3C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uDAAQ;AAC3D;AACA;AACA,yDAAyD,qEAAW;AACpE;AACA,yBAAyB,uDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AAAgC;AACA;AACzB,qCAAqC,4CAAK,gBAAgB,4CAAK;AACtE,WAAW,oDAAK;AAChB;AACA,+B;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AACG;AACvC,0CAA0C,sDAAK;AACtD,SAAS,iEAAS;AAClB;AACA;AACA;AACA,oBAAoB,sDAAK;AACzB;AACA,eAAe,sDAAU;AACzB,6DAA6D,iCAAiC;AAC9F;AACA,KAAK;AACL;AACA;AACA,WAAW,8BAA8B;AACzC;AACA,mBAAmB,2CAA2C;AAC9D;AACA,oC;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACD;AACT;AACjC;AACP;AACA;AACA;AACA,QAAQ,qEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sDAAU;AAC9F;AACA;AACA,WAAW,oEAAQ,aAAa,4DAAS;AACzC;AACA,iC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACP;AAC7B,kBAAkB,sDAAU,CAAC,+CAAI;AACjC;AACP;AACA;AACA,iC;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACV;AACR;AACE;AAC3B;AACP;AACA,QAAQ,qEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAK;AACxB;AACA,+BAA+B,4DAAS,oBAAoB,sDAAM;AAClE;AACA,mBAAmB,4DAAS;AAC5B;AACA;AACA,8B;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACb;AACY;AACV;AACzB;AACP;AACA,eAAe,4CAAK;AACpB;AACA;AACA,gCAAgC,6DAAO;AACvC;AACA;AACA,eAAe,sDAAU;AACzB;AACA,eAAe,kDAAI;AACnB,yBAAyB,wBAAwB,EAAE;AACnD;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,6C;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACxC;AACP;AACA,mBAAmB,sDAAU;AAC7B;AACA,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,sDAAU;AAC7B;AACA,qCAAqC,0DAAY;AACjD,8DAA8D,gDAAgD;AAC9G;AACA,SAAS;AACT;AACA;AACO;AACP,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA,4CAA4C,wDAAwD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACF;AACa;AACS;AACvD;AACP;AACA,YAAY,6DAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACO,6BAA6B,gEAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA,mCAAmC,iFAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAA2C;AACpC;AACP,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACO;AACP,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAA2C;AACpC;AACP,uBAAuB,sDAAU;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACVA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA,mBAAmB,sDAAU;AAC7B;AACA;AACA,mBAAmB,sDAAU,gDAAgD,oBAAoB;AACjG;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA,sC;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AACG;AACI;AAC3C;AACP;AACA,QAAQ,iEAAS;AACjB;AACA;AACA,aAAa,qEAAW;AACxB;AACA;AACA,SAAS,qEAAW;AACpB,oBAAoB,sDAAK;AACzB;AACA,eAAe,sDAAU;AACzB,oBAAoB,iEAAS;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACb;AACE;AACzB;AACP,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAI,WAAW,4CAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iC;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACC;AACU;AACS;AACe;AACtE;AACP;AACA;AACA;AACA;AACA,WAAW,4DAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,sDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAO;AACnB;AACA;AACA,8BAA8B,kEAAe;AAC7C,oDAAoD,kEAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kEAAe;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kEAAe;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iFAAiB;AAChC;AACA;AACA,+B;;;;;;;;;;;;ACrMA;AAAA;AAAA;AAAsC;AAC/B;AACP,WAAW,0DAAQ;AACnB;AACA,qC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACJ;AACN;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,gDAAO;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,sDAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;ACnKA;AAAA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAsC;AACM;AACrC;AACP,WAAW,0DAAQ,CAAC,uDAAQ;AAC5B;AACA,oC;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACT;AACA;AACzB;AACc;AACnC;AACP;AACA,0DAA0D,6DAAI,qBAAqB,gDAAG;AACtF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iCAAiC,gEAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gEAAe;AACnD;AACA;AACA,QAAQ,iFAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACI;AACxC;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kCAAkC,sDAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAA+C;AACxC,qBAAqB,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACTA;AAAA;AAAA;AAA4C;AACrC,mCAAmC,wDAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAkD;AAC3C,sCAAsC,8DAAc;AAC3D;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAA8C;AACF;AACrC,yBAAyB,wDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yDAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAkD;AAC3C,4BAA4B,8DAAc;AACjD;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAkC;AAC3B,0BAA0B,8CAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAyC;AAClC,6BAA6B,oDAAS;AAC7C,uCAAuC,oDAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAA4C;AACrC,0BAA0B,wDAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAkD;AAC3C,6BAA6B,8DAAc;AAClD;AACA,0C;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACM;AAC3C,mCAAmC,8DAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,wDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAA8D;AACM;AAC7D,2BAA2B,gFAAuB,CAAC,0EAAoB;AAC9E,0C;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAA0C;AACM;AACzC,iBAAiB,4DAAa,CAAC,sDAAU;AAChD,gC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAA4C;AACM;AAC3C,kBAAkB,8DAAc,CAAC,wDAAW;AACnD,iC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAA4C;AACM;AAC3C,kBAAkB,8DAAc,CAAC,wDAAW;AACnD,iC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACO;AACA;AACP,oC;;;;;;;;;;;;ACRA;AAAA;AAAO;AACP,sC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAO;AACP;AACA;AACO;AACP,wC;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mD;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sC;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mD;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wC;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA,WAAW,cAAc;AACzB,EAAE,0BAA0B,MAAM,IAAI,eAAe,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACO;AACP,+C;;;;;;;;;;;;ACXA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA,eAAe,iCAAiC;AAChD;AACA;AACA;AACA,uDAAuD,sDAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;AChBA;AAAA;AAAO;AACP,sBAAsB,WAAW,EAAE;AACnC;AACA,2C;;;;;;;;;;;;ACHA;AAAA;AAAO;AACP;AACA;AACA,oC;;;;;;;;;;;;ACHA;AAAA;AAAO;AACP,mC;;;;;;;;;;;;ACDA;AAAA;AAAO;AACP,uC;;;;;;;;;;;;ACDA;AAAA;AAAO;AACP;AACA;AACA,sC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAuE;AAChE;AACP,iCAAiC,6DAAiB;AAClD;AACA,+C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAiE;AAC1D;AACP,iCAAiC,yDAAe;AAChD;AACA,sC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAoC;AAC7B;AACP,YAAY,wDAAO;AACnB;AACA,qC;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA,oC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAA2C;AACpC;AACP,oCAAoC,sDAAU;AAC9C;AACA,wC;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA,qC;;;;;;;;;;;;ACHA;AAAA;AAAO;AACP;AACA;AACA,uC;;;;;;;;;;;;ACHA;AAAA;AAAO,iBAAiB;AACxB,gC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAA8B;AACvB;AACP;AACA;AACO;AACP;AACA,eAAe,0CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACW;AACI;AACE;AACI;AACpB;AACJ;AACF;AAC2B;AACM;AAChE;AACP,0BAA0B,sDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAiB;AACxD,eAAe,oFAAqB;AACpC;AACA,aAAa,gEAAW;AACxB,eAAe,0EAAgB;AAC/B;AACA,aAAa,4DAAS;AACtB,eAAe,8EAAkB;AACjC;AACA,uCAAuC,yDAAe;AACtD,eAAe,gFAAmB;AAClC;AACA;AACA,sBAAsB,0DAAQ,qCAAqC,OAAO;AAC1E,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AC1CA;AAAA;AAAO;AACP,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAiE;AAC1D;AACP,8BAA8B,yDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+C;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAuE;AAChE;AACP,oBAAoB,6DAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAoD;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,gEAAe;AACnC;AACA;AACA,8C;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAqD;AACT;AACrC,8FAA8F,gEAAe;AACpH;AACA;AACA;AACA,WAAW,gEAAW;AACtB;AACA,6C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiC;AACvB;AAC9C;AACP;AACA,sCAAsC,sDAAU;AAChD;AACA;AACA,2BAA2B,iEAAkB;AAC7C,kCAAkC,iEAAkB;AACpD;AACA;AACA;AACA,mBAAmB,sDAAU,CAAC,+CAAa;AAC3C;AACA,eAAe,sDAAU;AACzB;AACA,wC;;;;;;;;;;;;;;;;;;;ACjB2C;AAIR;AACO;AAK1C,IAAa,UAAU,GAAvB,MAAa,UAAU;IAGrB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEpC,SAAS,CAAC,KAAa,EAAE,OAA0B;;YACvD,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,GAAG,EAAE;gBACX,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC9B,MAAM,QAAQ,GAAQ,WAAW,CAAC,GAAG,EAAE;wBACrC,IAAI,QAAQ,CAAC,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;4BACrD,aAAa,CAAC,QAAQ,CAAC,CAAC;4BACxB,OAAO,EAAE,CAAC;yBACX;oBACH,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAC,CAAC;gBACJ,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC7B,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC5B,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBACH,IAAI,OAAO,EAAE;oBACX,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACpC;aACF;iBAAM;gBACL,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;aACrC;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;KAAA;IAED,QAAQ,CAAC,KAAa,EAAE,OAA0B;QAEhD,qEAAW,CAAC,MAAM,CAAC;YACjB,6BAA6B,EAAE,wBAAwB;YACvD,2BAA2B,EAAE,yCAAyC,CAAE,WAAW;SACpF,CAAC,CAAC;QAEH,IAAI,UAAU,GAAqB,OAAO,IAAI,EAAE,CAAC;QACjD,IAAI,CAAC,GAAG,GAAG,oEAAU,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC7C,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,yEAAe,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAChD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,GAAG;YAAE,OAAO;QACtB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;YAClB,SAAS,EAAE,mEAAS,CAAC,MAAM;YAC3B,QAAQ,EAAE;gBACR,QAAQ,EAAE;oBACR,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,CAAC;iBACT;gBACD,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,CAAC;gBACZ,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,CAAC;aACb;YACD,UAAU,EAAE;gBACV,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;aACb;YACD,aAAa,EAAE;gBACb,MAAM,EAAE,IAAI;gBACZ,UAAU,EAAE,IAAI;gBAChB,gBAAgB,EAAE,KAAK;gBACvB,aAAa,EAAE,IAAI,CAAE,oBAAoB;aAC1C;SACF,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;IACnB,CAAC;CACF;;YA3E+B,uDAAQ;;AAH3B,UAAU;IAHtB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAI8B,uDAAQ;GAH3B,UAAU,CA8EtB;AA9EsB","file":"default~basics-basics-module~circle-circle-module~directions-directions-module~elevation-elevation-m~5146079b-es2015.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _this = this;\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance, instancePropertyGet, instancePropertySet, checkAvailability, getPromise } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n    'ion-router-outlet[main] #',\n    '#'\n];\nvar LatLng = /** @class */ (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\nexport { LatLng };\nvar LatLngBounds = /** @class */ (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    LatLngBounds.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.extend = function (LatLng) { return cordovaInstance(this, \"extend\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Object.defineProperty(LatLngBounds.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\nexport var TrafficModelId = {\n    BEST_GUESS: 'BEST_GUESS',\n    OPTIMISTIC: 'OPTIMISTIC',\n    PESSIMISTIC: 'PESSIMISTIC'\n};\nexport var TransitModeId = {\n    BUS: 'BUS',\n    RAIL: 'RAIL',\n    SUBWAY: 'SUBWAY',\n    TRAIN: 'TRAIN',\n    TRAM: 'TRAM'\n};\nexport var TransitRoutePreferenceId = {\n    FEWER_TRANSFERS: 'FEWER_TRANSFERS',\n    LESS_WALKING: 'LESS_WALKING'\n};\nexport var UnitSystemId = {\n    IMPERIAL: 'IMPERIAL',\n    METRIC: 'METRIC'\n};\nexport var TravelModeId = {\n    BICYCLING: 'BICYCLING',\n    DRIVING: 'DRIVING',\n    TRANSIT: 'TRANSIT',\n    WALKING: 'WALKING'\n};\nexport var VehicleTypeId = {\n    BUS: 'BUS',\n    CABLE_CAR: 'CABLE_CAR',\n    COMMUTER_TRAIN: 'COMMUTER_TRAIN',\n    FERRY: 'FERRY',\n    FUNICULAR: 'FUNICULAR',\n    GONDOLA_LIFT: 'GONDOLA_LIFT',\n    HEAVY_RAIL: 'HEAVY_RAIL',\n    HIGH_SPEED_TRAIN: 'HIGH_SPEED_TRAIN',\n    INTERCITY_BUS: 'INTERCITY_BUS',\n    METRO_RAIL: 'METRO_RAIL',\n    MONORAIL: 'MONORAIL',\n    OTHER: 'OTHER',\n    RAIL: 'RAIL',\n    SHARE_TAXI: 'SHARE_TAXI',\n    SUBWAY: 'SUBWAY',\n    TRAM: 'TRAM',\n    TROLLEYBUS: 'TROLLEYBUS'\n};\nvar VisibleRegion = /** @class */ (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    VisibleRegion.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    Object.defineProperty(VisibleRegion.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farLeft\", {\n        get: function () { return instancePropertyGet(this, \"farLeft\"); },\n        set: function (value) { instancePropertySet(this, \"farLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farRight\", {\n        get: function () { return instancePropertyGet(this, \"farRight\"); },\n        set: function (value) { instancePropertySet(this, \"farRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearLeft\", {\n        get: function () { return instancePropertyGet(this, \"nearLeft\"); },\n        set: function (value) { instancePropertySet(this, \"nearLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearRight\", {\n        get: function () { return instancePropertyGet(this, \"nearRight\"); },\n        set: function (value) { instancePropertySet(this, \"nearRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click',\n    DIRECTIONS_CHANGED: 'directions_changed'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\nexport var AnimationId = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nexport var MapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nvar GoogleMaps = /** @class */ (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    GoogleMaps.createPanorama = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.pluginName = \"GoogleMaps\";\n    GoogleMaps.pluginRef = \"plugin.google.maps\";\n    GoogleMaps.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMaps.repo = \"https://github.com/mapsplugin/cordova-plugin-googlemaps\";\n    GoogleMaps.document = \"https://ionicframework.com/docs/native/google-maps/\";\n    GoogleMaps.install = \"ionic cordova plugin add cordova-plugin-googlemaps\";\n    GoogleMaps.platforms = [\"Android\", \"iOS\", \"Browser\"];\n    return GoogleMaps;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar BaseClass = /** @class */ (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addEventListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n                return _this.addEventListenerOnce(eventName);\n            }\n        })();\n    };\n    BaseClass.prototype.get = function (key) { return cordovaInstance(this, \"get\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.set = function (key, value, noNotify) { return cordovaInstance(this, \"set\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return cordovaInstance(this, \"bindTo\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.on(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.hasEventListener = function () { return cordovaInstance(this, \"hasEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.empty = function () { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n        return cordovaInstance(this, \"trigger\", { \"sync\": true }, arguments);\n    };\n    BaseClass.prototype.destroy = function () { return cordovaInstance(this, \"destroy\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.removeEventListener = function (eventName, listener) { return cordovaInstance(this, \"removeEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.off = function (eventName, listener) { return cordovaInstance(this, \"off\", { \"sync\": true }, arguments); };\n    BaseClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseClass.pluginName = \"GoogleMaps\";\n    BaseClass.pluginRef = \"plugin.google.maps.BaseClass\";\n    BaseClass.repo = \"\";\n    return BaseClass;\n}());\nexport { BaseClass };\nvar BaseArrayClass = /** @class */ (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    BaseArrayClass.prototype.empty = function (noNotify) { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.forEach = function (fn) { return cordovaInstance(this, \"forEach\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.map = function (fn) { return cordovaInstance(this, \"map\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapSeries = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.filter = function (fn) { return cordovaInstance(this, \"filter\", { \"sync\": true }, arguments); };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.getArray = function () { return cordovaInstance(this, \"getArray\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getAt = function (index) { return cordovaInstance(this, \"getAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getLength = function () { return cordovaInstance(this, \"getLength\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.indexOf = function (element) { return cordovaInstance(this, \"indexOf\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.reverse = function () { return cordovaInstance(this, \"reverse\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.sort = function () { return cordovaInstance(this, \"sort\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return cordovaInstance(this, \"insertAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.pop = function (noNotify) { return cordovaInstance(this, \"pop\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.push = function (element, noNotify) { return cordovaInstance(this, \"push\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return cordovaInstance(this, \"removeAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return cordovaInstance(this, \"setAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.pluginName = \"BaseArrayClass\";\n    BaseArrayClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseArrayClass.pluginRef = \"plugin.google.maps.BaseArrayClass\";\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Circle.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () {\n        return this._map;\n    };\n    Circle.prototype.setCenter = function (latLng) { return cordovaInstance(this, \"setCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getRadius = function () { return cordovaInstance(this, \"getRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setRadius = function (radius) { return cordovaInstance(this, \"setRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setFillColor = function (color) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Circle.prototype.getBounds = function () { return cordovaInstance(this, \"getBounds\", { \"sync\": true }, arguments); };\n    Circle.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Circle.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    return Circle;\n}(BaseClass));\nexport { Circle };\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    /**\n     * Set environment variables.\n     */\n    Environment.setEnv = function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment.setBackgroundColor(color);\n    };\n    Environment.plugin = \"cordova-plugin-googlemaps\";\n    Environment.pluginName = \"GoogleMaps\";\n    Environment.pluginRef = \"plugin.google.maps.environment\";\n    Environment.repo = \"\";\n    return Environment;\n}());\nexport { Environment };\nvar Geocoder = /** @class */ (function () {\n    function Geocoder() {\n    }\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder.pluginName = \"GoogleMaps\";\n    Geocoder.pluginRef = \"plugin.google.maps.Geocoder\";\n    Geocoder.plugin = \"cordova-plugin-googlemaps\";\n    Geocoder.repo = \"\";\n    return Geocoder;\n}());\nexport { Geocoder };\nvar DirectionsService = /** @class */ (function () {\n    function DirectionsService() {\n    }\n    /**\n     * A service for computing directions between two or more places.\n     * @param {DirectionsRequest} request\n     * @return {Promise<DirectionsResult>}\n     */\n    DirectionsService.route = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().DirectionsService.route(request, resolve, reject);\n        });\n    };\n    DirectionsService.pluginName = \"GoogleMaps\";\n    DirectionsService.pluginRef = \"plugin.google.maps.DirectionsService\";\n    DirectionsService.plugin = \"cordova-plugin-googlemaps\";\n    DirectionsService.repo = \"\";\n    return DirectionsService;\n}());\nexport { DirectionsService };\nvar ElevationService = /** @class */ (function () {\n    function ElevationService() {\n    }\n    /**\n     * Makes an elevation request along a path, where the elevation data are returned as distance-based samples along that path.\n     * @param {PathElevationRequest} request\n     * @return {Promise<ElevationResult[]>}\n     */\n    ElevationService.getElevationAlongPath = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().ElevationService.getElevationAlongPath(request, resolve, reject);\n        });\n    };\n    /**\n     * Makes an elevation request for a list of discrete locations.\n     * @param {LocationElevationRequest} request\n     * @return {Promise<ElevationResult[]>}\n     */\n    ElevationService.getElevationForLocations = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().ElevationService.getElevationForLocations(request, resolve, reject);\n        });\n    };\n    ElevationService.pluginName = \"GoogleMaps\";\n    ElevationService.pluginRef = \"plugin.google.maps.ElevationService\";\n    ElevationService.plugin = \"cordova-plugin-googlemaps\";\n    ElevationService.repo = \"\";\n    return ElevationService;\n}());\nexport { ElevationService };\nvar LocationService = /** @class */ (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    LocationService.getMyLocation = function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    LocationService.hasPermission = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    LocationService.pluginName = \"GoogleMaps\";\n    LocationService.pluginRef = \"plugin.google.maps.LocationService\";\n    LocationService.plugin = \"cordova-plugin-googlemaps\";\n    LocationService.repo = \"\";\n    return LocationService;\n}());\nexport { LocationService };\nvar Encoding = /** @class */ (function () {\n    function Encoding() {\n    }\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding.encodePath(path);\n    };\n    Encoding.pluginName = \"GoogleMaps\";\n    Encoding.pluginRef = \"plugin.google.maps.geometry.encoding\";\n    Encoding.plugin = \"cordova-plugin-googlemaps\";\n    Encoding.repo = \"\";\n    return Encoding;\n}());\nexport { Encoding };\nvar Poly = /** @class */ (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly.pluginName = \"GoogleMaps\";\n    Poly.pluginRef = \"plugin.google.maps.geometry.poly\";\n    Poly.plugin = \"cordova-plugin-googlemaps\";\n    Poly.repo = \"\";\n    return Poly;\n}());\nexport { Poly };\nvar Spherical = /** @class */ (function () {\n    function Spherical() {\n    }\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical.interpolate(from, to, fraction);\n    };\n    Spherical.pluginName = \"GoogleMaps\";\n    Spherical.pluginRef = \"plugin.google.maps.geometry.spherical\";\n    Spherical.plugin = \"cordova-plugin-googlemaps\";\n    Spherical.repo = \"\";\n    return Spherical;\n}());\nexport { Spherical };\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 40) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && (targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100)) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    StreetViewPanorama.prototype.setPov = function (pov) { return cordovaInstance(this, \"setPov\", {}, arguments); };\n    StreetViewPanorama.prototype.setPosition = function (cameraPosition) { return cordovaInstance(this, \"setPosition\", {}, arguments); };\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = function () { return cordovaInstance(this, \"getPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = function () { return cordovaInstance(this, \"getZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setStreetNamesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getStreetNamesEnabled = function () { return cordovaInstance(this, \"getStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setNavigationEnabled = function (gestureEnable) { return cordovaInstance(this, \"setNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getNavigationEnabled = function () { return cordovaInstance(this, \"getNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLinks = function () { return cordovaInstance(this, \"getLinks\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLocation = function () { return cordovaInstance(this, \"getLocation\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanoId = function () { return cordovaInstance(this, \"getPanoId\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    StreetViewPanorama.pluginName = \"StreetViewPanorama\";\n    StreetViewPanorama.plugin = \"cordova-plugin-googlemaps\";\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\nvar GoogleMap = /** @class */ (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options, __timeout) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 40) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && (targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100)) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, __timeout == null ? 100 : __timeout);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    GoogleMap.prototype.setDiv = function (domNode) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (!domNode) {\n                    return _this._objectInstance.setDiv();\n                }\n                if (typeof domNode === 'string') {\n                    return (getPromise(function (resolve, reject) {\n                        var i, targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                resolve(targets[0]);\n                                return;\n                            }\n                        }\n                        reject('Can not find [#' + domNode + '] element');\n                    }))\n                        .then(function (element) {\n                        return _this._objectInstance.setDiv(element);\n                    });\n                }\n                else {\n                    if (domNode instanceof HTMLElement &&\n                        !domNode.offsetParent &&\n                        domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                        return _this._objectInstance.setDiv(domNode);\n                    }\n                    else {\n                        throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n                    }\n                }\n            }\n        })();\n    };\n    GoogleMap.prototype.getDiv = function () { return cordovaInstance(this, \"getDiv\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return cordovaInstance(this, \"setMapTypeId\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return cordovaInstance(this, \"animateCamera\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomIn = function () { return cordovaInstance(this, \"animateCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomOut = function () { return cordovaInstance(this, \"animateCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return cordovaInstance(this, \"moveCamera\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomIn = function () { return cordovaInstance(this, \"moveCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomOut = function () { return cordovaInstance(this, \"moveCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.getCameraPosition = function () { return cordovaInstance(this, \"getCameraPosition\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTarget = function () { return cordovaInstance(this, \"getCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraZoom = function () { return cordovaInstance(this, \"getCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraBearing = function () { return cordovaInstance(this, \"getCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTilt = function () { return cordovaInstance(this, \"getCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTarget = function (latLng) { return cordovaInstance(this, \"setCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return cordovaInstance(this, \"setCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTilt = function (tiltAngle) { return cordovaInstance(this, \"setCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraBearing = function (bearing) { return cordovaInstance(this, \"setCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.panBy = function (x, y) { return cordovaInstance(this, \"panBy\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getVisibleRegion = function () { return cordovaInstance(this, \"getVisibleRegion\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getMyLocation = function (options) { return cordovaInstance(this, \"getMyLocation\", {}, arguments); };\n    GoogleMap.prototype.setClickable = function (isClickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (_this.get('_overlays')) {\n                    Object.keys(_this.get('_overlays')).forEach(function (overlayId) {\n                        _this.get('_overlays')[overlayId] = null;\n                        delete _this.get('_overlays')[overlayId];\n                    });\n                }\n                return getPromise(function (resolve) {\n                    _this._objectInstance.clear(function () { return resolve(); });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return cordovaInstance(this, \"fromLatLngToPoint\", {}, arguments); };\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return cordovaInstance(this, \"fromPointToLatLng\", {}, arguments); };\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMyLocationButtonEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationButtonEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getFocusedBuilding = function () { return cordovaInstance(this, \"getFocusedBuilding\", {}, arguments); };\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return cordovaInstance(this, \"setIndoorEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return cordovaInstance(this, \"setTrafficEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { return cordovaInstance(this, \"setCompassEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return cordovaInstance(this, \"setAllGesturesEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return cordovaInstance(this, \"setPadding\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarker(options, function (marker) {\n                        if (marker) {\n                            var overlayId_1 = marker.getId();\n                            var overlay_1 = new Marker(_this, marker);\n                            _this.get('_overlays')[overlayId_1] = overlay_1;\n                            marker.one(overlayId_1 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_1] = null;\n                                    overlay_1.destroy();\n                                }\n                            });\n                            resolve(overlay_1);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var marker = _this._objectInstance.addMarker(options);\n                var overlayId = marker.getId();\n                var overlay = new Marker(_this, marker);\n                _this.get('_overlays')[overlayId] = overlay;\n                marker.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                        if (markerCluster) {\n                            var overlayId_2 = markerCluster.getId();\n                            var overlay_2 = new MarkerCluster(_this, markerCluster);\n                            _this.get('_overlays')[overlayId_2] = overlay_2;\n                            markerCluster.one('remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_2] = null;\n                                    overlay_2.destroy();\n                                }\n                            });\n                            markerCluster.set('_overlays', new BaseArrayClass());\n                            resolve(overlay_2);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerClusterSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var markerCluster = _this._objectInstance.addMarkerCluster(options);\n                var overlayId = markerCluster.getId();\n                var overlay = new MarkerCluster(_this, markerCluster);\n                _this.get('_overlays')[overlayId] = overlay;\n                markerCluster.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                markerCluster.set('_overlays', new BaseArrayClass());\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addCircle(options, function (circle) {\n                        if (circle) {\n                            var overlayId_3 = circle.getId();\n                            var overlay_3 = new Circle(_this, circle);\n                            _this.get('_overlays')[overlayId_3] = overlay_3;\n                            circle.one(overlayId_3 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_3] = null;\n                                    overlay_3.destroy();\n                                }\n                            });\n                            resolve(overlay_3);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircleSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var circle = _this._objectInstance.addCircle(options);\n                var overlayId = circle.getId();\n                var overlay = new Circle(_this, circle);\n                _this.get('_overlays')[overlayId] = overlay;\n                circle.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolygon(options, function (polygon) {\n                        if (polygon) {\n                            var overlayId_4 = polygon.getId();\n                            var overlay_4 = new Polygon(_this, polygon);\n                            _this.get('_overlays')[overlayId_4] = overlay_4;\n                            polygon.one(overlayId_4 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_4] = null;\n                                    overlay_4.destroy();\n                                }\n                            });\n                            resolve(overlay_4);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygonSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polygon = _this._objectInstance.addPolygon(options);\n                var overlayId = polygon.getId();\n                var overlay = new Polygon(_this, polygon);\n                _this.get('_overlays')[overlayId] = overlay;\n                polygon.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolyline(options, function (polyline) {\n                        if (polyline) {\n                            var overlayId_5 = polyline.getId();\n                            var overlay_5 = new Polyline(_this, polyline);\n                            _this.get('_overlays')[overlayId_5] = overlay_5;\n                            polyline.one(overlayId_5 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_5] = null;\n                                    overlay_5.destroy();\n                                }\n                            });\n                            resolve(overlay_5);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolylineSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polyline = _this._objectInstance.addPolyline(options);\n                var overlayId = polyline.getId();\n                var overlay = new Polyline(_this, polyline);\n                _this.get('_overlays')[overlayId] = overlay;\n                polyline.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                        if (tileOverlay) {\n                            var overlayId_6 = tileOverlay.getId();\n                            var overlay_6 = new TileOverlay(_this, tileOverlay);\n                            _this.get('_overlays')[overlayId_6] = overlay_6;\n                            tileOverlay.one(overlayId_6 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_6] = null;\n                                    overlay_6.destroy();\n                                }\n                            });\n                            resolve(overlay_6);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var tileOverlay = _this._objectInstance.addTileOverlay(options);\n                var overlayId = tileOverlay.getId();\n                var overlay = new TileOverlay(_this, tileOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                tileOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                        if (groundOverlay) {\n                            var overlayId_7 = groundOverlay.getId();\n                            var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                            _this.get('_overlays')[overlayId_7] = overlay_7;\n                            groundOverlay.one(overlayId_7 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_7] = null;\n                                    overlay_7.destroy();\n                                }\n                            });\n                            resolve(overlay_7);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var groundOverlay = _this._objectInstance.addGroundOverlay(options);\n                var overlayId = groundOverlay.getId();\n                var overlay = new GroundOverlay(_this, groundOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                groundOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addKmlOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                        if (kmlOverlay) {\n                            var overlayId_8 = kmlOverlay.getId();\n                            var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                            _this.get('_overlays')[overlayId_8] = overlay_8;\n                            kmlOverlay.one(overlayId_8 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_8] = null;\n                                    overlay_8.destroy();\n                                }\n                            });\n                            resolve(overlay_8);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addDirectionsRendererSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var directionsRenderer = _this._objectInstance.addDirectionsRenderer(options);\n                var overlayId = directionsRenderer.getId();\n                var overlay = new DirectionsRenderer(_this, directionsRenderer);\n                _this.get('_overlays')[overlayId] = overlay;\n                directionsRenderer.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.toDataURL = function (options) { return cordovaInstance(this, \"toDataURL\", {}, arguments); };\n    GoogleMap.pluginName = \"GoogleMaps\";\n    GoogleMap.plugin = \"cordova-plugin-googlemaps\";\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    GroundOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    GroundOverlay.prototype.setBounds = function (bounds) { return cordovaInstance(this, \"setBounds\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setBearing = function (bearing) { return cordovaInstance(this, \"setBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getBearing = function () { return cordovaInstance(this, \"getBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setImage = function (imageUrl) { return cordovaInstance(this, \"setImage\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\nvar HtmlInfoWindow = /** @class */ (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return cordovaInstance(this, \"setBackgroundColor\", {}, arguments); };\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return cordovaInstance(this, \"setContent\", {}, arguments); };\n    HtmlInfoWindow.prototype.open = function (marker) { return cordovaInstance(this, \"open\", {}, arguments); };\n    HtmlInfoWindow.prototype.close = function () { return cordovaInstance(this, \"close\", {}, arguments); };\n    HtmlInfoWindow.plugin = \"cordova-plugin-googlemaps\";\n    HtmlInfoWindow.pluginName = \"GoogleMaps\";\n    HtmlInfoWindow.pluginRef = \"plugin.google.maps.HtmlInfoWindow\";\n    HtmlInfoWindow.repo = \"\";\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Marker.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () {\n        return this._map;\n    };\n    Marker.prototype.setPosition = function (latLng) { return cordovaInstance(this, \"setPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.showInfoWindow = function () { return cordovaInstance(this, \"showInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.hideInfoWindow = function () { return cordovaInstance(this, \"hideInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.setAnimation = function (animation) { return cordovaInstance(this, \"setAnimation\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return cordovaInstance(this, \"setDisableAutoPan\", { \"sync\": true }, arguments); };\n    Marker.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.isVisible = function () { return cordovaInstance(this, \"isVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.setTitle = function (title) { return cordovaInstance(this, \"setTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.getTitle = function () { return cordovaInstance(this, \"getTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.setSnippet = function (snippet) { return cordovaInstance(this, \"setSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.getSnippet = function () { return cordovaInstance(this, \"getSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.setOpacity = function (alpha) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Marker.prototype.setIconAnchor = function (x, y) { return cordovaInstance(this, \"setIconAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { return cordovaInstance(this, \"setInfoWindowAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.isInfoWindowShown = function () { return cordovaInstance(this, \"isInfoWindowShown\", { \"sync\": true }, arguments); };\n    Marker.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDraggable = function (draggable) { return cordovaInstance(this, \"setDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.isDraggable = function () { return cordovaInstance(this, \"isDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.setFlat = function (flat) { return cordovaInstance(this, \"setFlat\", { \"sync\": true }, arguments); };\n    Marker.prototype.setIcon = function (icon) { return cordovaInstance(this, \"setIcon\", { \"sync\": true }, arguments); };\n    Marker.prototype.setRotation = function (rotation) { return cordovaInstance(this, \"setRotation\", { \"sync\": true }, arguments); };\n    Marker.prototype.getRotation = function () { return cordovaInstance(this, \"getRotation\", { \"sync\": true }, arguments); };\n    return Marker;\n}(BaseClass));\nexport { Marker };\nvar MarkerCluster = /** @class */ (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    MarkerCluster.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarker = function (marker) { return cordovaInstance(this, \"addMarker\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarkers = function (markers) { return cordovaInstance(this, \"addMarkers\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () {\n        return this._map;\n    };\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polygon.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () {\n        return this._map;\n    };\n    Polygon.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polygon.prototype.setHoles = function (holes) { return cordovaInstance(this, \"setHoles\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    Polygon.prototype.setFillColor = function (fillColor) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setGeodesic = function (geodesic) { return cordovaInstance(this, \"setGeodesic\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polyline.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () {\n        return this._map;\n    };\n    Polyline.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polyline.prototype.setGeoDesic = function (geoDesic) { return cordovaInstance(this, \"setGeoDesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\nvar TileOverlay = /** @class */ (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    TileOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { return cordovaInstance(this, \"setFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getFadeIn = function () { return cordovaInstance(this, \"getFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getTileSize = function () { return cordovaInstance(this, \"getTileSize\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\nvar KmlOverlay = /** @class */ (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    KmlOverlay.prototype.getDefaultViewport = function () { return cordovaInstance(this, \"getDefaultViewport\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    KmlOverlay.prototype.getMap = function () { return this._map; };\n    KmlOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nvar DirectionsRenderer = /** @class */ (function (_super) {\n    __extends(DirectionsRenderer, _super);\n    function DirectionsRenderer(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    DirectionsRenderer.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    DirectionsRenderer.prototype.getMap = function () { return this._map; };\n    DirectionsRenderer.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.setDirections = function (result) { return cordovaInstance(this, \"setDirections\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.getRouteIndex = function () { return cordovaInstance(this, \"getRouteIndex\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.getDirections = function () { return cordovaInstance(this, \"getDirections\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return DirectionsRenderer;\n}(BaseClass));\nexport { DirectionsRenderer };\n//# sourceMappingURL=data:application/json;base64,","export function checkReady() {\n    if (typeof process === 'undefined') {\n        var win_1 = typeof window !== 'undefined' ? window : {};\n        var DEVICE_READY_TIMEOUT_1 = 5000;\n        // To help developers using cordova, we listen for the device ready event and\n        // log an error if it didn't fire in a reasonable amount of time. Generally,\n        // when this happens, developers should remove and reinstall plugins, since\n        // an inconsistent plugin is often the culprit.\n        var before_1 = Date.now();\n        var didFireReady_1 = false;\n        win_1.document.addEventListener('deviceready', function () {\n            console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before_1) + \" ms\");\n            didFireReady_1 = true;\n        });\n        setTimeout(function () {\n            if (!didFireReady_1 && win_1.cordova) {\n                console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT_1 + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n            }\n        }, DEVICE_READY_TIMEOUT_1);\n    }\n}\n//# sourceMappingURL=bootstrap.js.map","import { fromEvent, Observable } from 'rxjs';\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function getPromise(callback) {\n    var tryNativePromise = function () {\n        if (Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    if (typeof window !== 'undefined' && window.angular) {\n        var doc = window.document;\n        var injector = window.angular.element(doc.querySelector('[ng-app]') || doc.body).injector();\n        if (injector) {\n            var $q = injector.get('$q');\n            return $q(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        console.warn(\"Angular 1 was detected but $q couldn't be retrieved. This is usually when the app is not bootstrapped on the html or body tag. Falling back to native promises which won't trigger an automatic digest when promises resolve.\");\n    }\n    return tryNativePromise();\n}\nexport function wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event event name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nfunction wrapEventObservable(event, element) {\n    element =\n        typeof window !== 'undefined' && element\n            ? get(window, element)\n            : element || (typeof window !== 'undefined' ? window : {});\n    return fromEvent(element, event);\n}\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance || (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (typeof window === 'undefined' || !window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return pluginObj._objectInstance && (!methodName || typeof pluginObj._objectInstance[methodName] !== 'undefined');\n}\nexport function setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' && opts.successName && opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' || typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been\n            // defined and thus causing non expected behavior.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nexport function callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nexport function callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\nexport function getPlugin(pluginRef) {\n    if (typeof window !== 'undefined') {\n        return get(window, pluginRef);\n    }\n    return null;\n}\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\nexport function pluginWarn(pluginName, plugin, method) {\n    if (method) {\n        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n}\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport function cordovaWarn(pluginName, method) {\n    if (typeof process === 'undefined') {\n        if (method) {\n            console.warn('Native: tried calling ' +\n                pluginName +\n                '.' +\n                method +\n                ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n        else {\n            console.warn('Native: tried accessing the ' +\n                pluginName +\n                ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n    }\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n//# sourceMappingURL=common.js.map","import { Observable } from 'rxjs';\nimport { checkAvailability, getPlugin } from './common';\nfunction overrideFunction(pluginObj, methodName) {\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, methodName);\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\nexport function cordovaFunctionOverride(pluginObj, methodName, args) {\n    if (args === void 0) { args = []; }\n    return overrideFunction(pluginObj, methodName);\n}\n//# sourceMappingURL=cordova-function-override.js.map","import { wrapInstance } from './common';\nexport function cordovaInstance(pluginObj, methodName, config, args) {\n    args = Array.from(args);\n    return wrapInstance(pluginObj, methodName, config).apply(this, args);\n}\n//# sourceMappingURL=cordova-instance.js.map","import { checkAvailability, getPlugin } from './common';\nexport function cordovaPropertyGet(pluginObj, key) {\n    if (checkAvailability(pluginObj, key) === true) {\n        return getPlugin(pluginObj.constructor.getPluginRef())[key];\n    }\n    return null;\n}\nexport function cordovaPropertySet(pluginObj, key, value) {\n    if (checkAvailability(pluginObj, key) === true) {\n        getPlugin(pluginObj.constructor.getPluginRef())[key] = value;\n    }\n}\n//# sourceMappingURL=cordova-property.js.map","import { wrap } from './common';\nexport function cordova(pluginObj, methodName, config, args) {\n    return wrap(pluginObj, methodName, config).apply(this, args);\n}\n//# sourceMappingURL=cordova.js.map","export function instancePropertyGet(pluginObj, key) {\n    if (pluginObj._objectInstance && pluginObj._objectInstance[key]) {\n        return pluginObj._objectInstance[key];\n    }\n    return null;\n}\nexport function instancePropertySet(pluginObj, key, value) {\n    if (pluginObj._objectInstance) {\n        pluginObj._objectInstance[key] = value;\n    }\n}\n//# sourceMappingURL=instance-property.js.map","//# sourceMappingURL=interfaces.js.map","import { checkReady } from './bootstrap';\nexport { IonicNativePlugin } from './ionic-native-plugin';\n// Decorators\nexport { checkAvailability, instanceAvailability, wrap, getPromise } from './decorators/common';\nexport * from './decorators/cordova';\nexport * from './decorators/cordova-function-override';\nexport * from './decorators/cordova-instance';\nexport * from './decorators/cordova-property';\nexport * from './decorators/instance-property';\nexport * from './decorators/interfaces';\ncheckReady();\n//# sourceMappingURL=index.js.map","import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar IonicNativePlugin = /** @class */ (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    IonicNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    IonicNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    IonicNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    IonicNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    IonicNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    IonicNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    IonicNativePlugin.pluginName = '';\n    IonicNativePlugin.pluginRef = '';\n    IonicNativePlugin.plugin = '';\n    IonicNativePlugin.repo = '';\n    IonicNativePlugin.platforms = [];\n    IonicNativePlugin.install = '';\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n//# sourceMappingURL=ionic-native-plugin.js.map","/**\n * @private\n */\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\n/**\n * @private\n */\nexport function getPromise(callback) {\n    if (callback === void 0) { callback = function () { }; }\n    var tryNativePromise = function () {\n        if (typeof Promise === 'function' || (typeof window !== 'undefined' && window.Promise)) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n}\n//# sourceMappingURL=util.js.map","export { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","import { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    }\n    getValue() {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    }\n    next(value) {\n        super.next(this._value = value);\n    }\n}\n//# sourceMappingURL=BehaviorSubject.js.map","import { Subscriber } from './Subscriber';\nexport class InnerSubscriber extends Subscriber {\n    constructor(parent, outerValue, outerIndex) {\n        super();\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    _next(value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    }\n    _error(error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    }\n}\n//# sourceMappingURL=InnerSubscriber.js.map","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === \"N\";\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case \"N\":\n                return observer.next && observer.next(this.value);\n            case \"E\":\n                return observer.error && observer.error(this.error);\n            case \"C\":\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case \"N\":\n                return next && next(this.value);\n            case \"E\":\n                return error && error(this.error);\n            case \"C\":\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case \"N\":\n                return of(this.value);\n            case \"E\":\n                return throwError(this.error);\n            case \"C\":\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification(\"N\", value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification(\"E\", undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification(\"C\");\nNotification.undefinedValueNotification = new Notification(\"N\", undefined);\n//# sourceMappingURL=Notification.js.map","import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport const empty = {\n    closed: true,\n    next(value) { },\n    error(err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete() { }\n};\n//# sourceMappingURL=Observer.js.map","import { Subscriber } from './Subscriber';\nexport class OuterSubscriber extends Subscriber {\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(error, innerSub) {\n        this.destination.error(error);\n    }\n    notifyComplete(innerSub) {\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=OuterSubscriber.js.map","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        const _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n//# sourceMappingURL=Scheduler.js.map","import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map","import { Subscription } from './Subscription';\nexport class SubjectSubscription extends Subscription {\n    constructor(subject, subscriber) {\n        super();\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        const subject = this.subject;\n        const observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        const subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    }\n}\n//# sourceMappingURL=SubjectSubscription.js.map","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n    constructor(destinationOrNext, error, complete) {\n        super();\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        destinationOrNext.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    _unsubscribeAndRecycle() {\n        const { _parent, _parents } = this;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscriber.js.map","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let hasErrors = false;\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parent, _parents, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        let index = -1;\n        let len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                hasErrors = true;\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                if (!teardown) {\n                    return Subscription.EMPTY;\n                }\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        if (subscription._addParent(this)) {\n            const subscriptions = this._subscriptions;\n            if (subscriptions) {\n                subscriptions.push(subscription);\n            }\n            else {\n                this._subscriptions = [subscription];\n            }\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n    _addParent(parent) {\n        let { _parent, _parents } = this;\n        if (_parent === parent) {\n            return false;\n        }\n        else if (!_parent) {\n            this._parent = parent;\n            return true;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n            return true;\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n            return true;\n        }\n        return false;\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map","let _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport const config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            const error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","import { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nexport class ConnectableObservable extends Observable {\n    constructor(source, subjectFactory) {\n        super();\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    _subscribe(subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    }\n    getSubject() {\n        const subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    }\n    connect() {\n        let connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    }\n    refCount() {\n        return higherOrderRefCount()(this);\n    }\n}\nconst connectableProto = ConnectableObservable.prototype;\nexport const connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nclass ConnectableSubscriber extends SubjectSubscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _error(err) {\n        this._unsubscribe();\n        super._error(err);\n    }\n    _complete() {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        super._complete();\n    }\n    _unsubscribe() {\n        const connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            const connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    }\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=ConnectableObservable.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map","import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\nexport function combineLatest(...observables) {\n    let resultSelector = null;\n    let scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class CombineLatestSubscriber extends OuterSubscriber {\n    constructor(destination, resultSelector) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    _next(observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (let i = 0; i < len; i++) {\n                const observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    }\n    notifyComplete(unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const values = this.values;\n        const oldVal = values[outerIndex];\n        const toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    }\n    _tryResultSelector(values) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=combineLatest.js.map","import { of } from './of';\nimport { concatAll } from '../operators/concatAll';\nexport function concat(...observables) {\n    return concatAll()(of(...observables));\n}\n//# sourceMappingURL=concat.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(subscriber => {\n        let input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map","import { Observable } from '../Observable';\nexport const EMPTY = new Observable(subscriber => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nexport function emptyScheduled(scheduler) {\n    return new Observable(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n//# sourceMappingURL=empty.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\nexport function forkJoin(...sources) {\n    let resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        resultSelector = sources.pop();\n    }\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        return forkJoin(sources).pipe(map(args => resultSelector(...args)));\n    }\n    return new Observable(subscriber => {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\nclass ForkJoinSubscriber extends OuterSubscriber {\n    constructor(destination, sources) {\n        super(destination);\n        this.sources = sources;\n        this.completed = 0;\n        this.haveValues = 0;\n        const len = sources.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const source = sources[i];\n            const innerSubscription = subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                this.add(innerSubscription);\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    }\n    notifyComplete(innerSub) {\n        const { destination, haveValues, values } = this;\n        const len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    }\n}\n//# sourceMappingURL=forkJoin.js.map","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            let i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = Object.prototype.toString;\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            let iterator;\n            sub.add(() => {\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(() => {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    let value;\n                    let done;\n                    try {\n                        const result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => {\n                const observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                    error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                    complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => input.then(value => {\n                sub.add(scheduler.schedule(() => {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(() => subscriber.complete()));\n                }));\n            }, err => {\n                sub.add(scheduler.schedule(() => subscriber.error(err)));\n            })));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map","import { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n//# sourceMappingURL=iif.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge(...observables) {\n    let concurrent = Number.POSITIVE_INFINITY;\n    let scheduler = null;\n    let last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of(...args) {\n    let scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                let observable = observables[i];\n                let subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=race.js.map","import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map","import { Observable } from '../Observable';\nexport function scalar(value) {\n    const result = new Observable(subscriber => {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n//# sourceMappingURL=scalar.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        this.values = values;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends OuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe(value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    }\n}\n//# sourceMappingURL=zip.js.map","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport class MapOperator {\n    constructor(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n}\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project, thisArg) {\n        super(destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=map.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Number.POSITIVE_INFINITY) {\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(mergeMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii))), concurrent));\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return (source) => source.lift(new MergeMapOperator(project, concurrent));\n}\nexport class MergeMapOperator {\n    constructor(project, concurrent = Number.POSITIVE_INFINITY) {\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    call(observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    }\n}\nexport class MergeMapSubscriber extends OuterSubscriber {\n    constructor(destination, project, concurrent = Number.POSITIVE_INFINITY) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    }\n    _innerSub(ish, value, index) {\n        const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyComplete(innerSub) {\n        const buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=mergeMap.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map","import { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=refCount.js.map","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n//# sourceMappingURL=Action.js.map","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AnimationFrameAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n//# sourceMappingURL=AsyncAction.js.map","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsyncScheduler.js.map","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n//# sourceMappingURL=QueueScheduler.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asap = new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const async = new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queue = new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport const iterator = getSymbolIterator();\nexport const $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map","export const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map","export const rxSubscriber = typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\nexport const $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","function ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\nexport const ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","function EmptyErrorImpl() {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n}\nEmptyErrorImpl.prototype = Object.create(Error.prototype);\nexport const EmptyError = EmptyErrorImpl;\n//# sourceMappingURL=EmptyError.js.map","let nextHandle = 1;\nconst tasksByHandle = {};\nfunction runIfPresent(handle) {\n    const cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(() => runIfPresent(handle));\n        return handle;\n    },\n    clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map","function ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\nexport const ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","function TimeoutErrorImpl() {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n}\nTimeoutErrorImpl.prototype = Object.create(Error.prototype);\nexport const TimeoutError = TimeoutErrorImpl;\n//# sourceMappingURL=TimeoutError.js.map","function UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\nexport const UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","import { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        const { closed, destination, isStopped } = observer;\n        if (closed || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map","export function hostReportError(err) {\n    setTimeout(() => { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","export const isArray = Array.isArray || ((x) => x && typeof x.length === 'number');\n//# sourceMappingURL=isArray.js.map","export const isArrayLike = ((x) => x && typeof x.length === 'number' && typeof x !== 'function');\n//# sourceMappingURL=isArrayLike.js.map","export function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","export function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n//# sourceMappingURL=isObservable.js.map","export function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map","export function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { noop } from './noop';\nexport function pipe(...fns) {\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn) => fn(prev), input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeTo = (result) => {\n    if (result instanceof Observable) {\n        return (subscriber) => {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n        const msg = `You provided ${value} where a stream was expected.`\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map","export const subscribeToArray = (array) => (subscriber) => {\n    for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n    }\n    if (!subscriber.closed) {\n        subscriber.complete();\n    }\n};\n//# sourceMappingURL=subscribeToArray.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        const item = iterator.next();\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToIterable.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeToObservable = (obj) => (subscriber) => {\n    const obs = obj[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    }\n    else {\n        return obs.subscribe(subscriber);\n    }\n};\n//# sourceMappingURL=subscribeToObservable.js.map","import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map","import { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)) {\n    if (destination.closed) {\n        return;\n    }\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map","import { Injectable } from '@angular/core';\nimport {\n  GoogleMaps, GoogleMap, GoogleMapsEvent,\n  GoogleMapOptions, Environment, MapTypeId\n} from '@ionic-native/google-maps';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n  map: GoogleMap;\n\n  constructor(private platform: Platform) {}\n\n  async attachMap(divId: string, options?: GoogleMapOptions): Promise<GoogleMap> {\n    options = options || {};\n\n    if (this.map) {\n       await (new Promise((resolve) => {\n        const instance: any = setInterval(() => {\n          if (document.querySelectorAll('#' + divId).length > 0) {\n            clearInterval(instance);\n            resolve();\n          }\n        }, 100);\n      }));\n      await this.map.setDiv(divId);\n      await new Promise((resolve) => {\n        setTimeout(resolve, 100);\n      });\n      if (options) {\n        await this.map.setOptions(options);\n      }\n    } else {\n      await this.platform.ready();\n      await this._loadMap(divId, options);\n    }\n    return Promise.resolve(this.map);\n  }\n\n  _loadMap(divId: string, options?: GoogleMapOptions) {\n\n    Environment.setEnv({\n      'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyBzTWTKaMEeABaeBSa3_E6ZMxseK4xXl4k',\n      'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyBzTWTKaMEeABaeBSa3_E6ZMxseK4xXl4k'  // optional\n    });\n\n    let mapOptions: GoogleMapOptions = options || {};\n    this.map = GoogleMaps.create(divId, options);\n    return (new Promise((resolve) => {\n      this.map.one(GoogleMapsEvent.MAP_READY).then(() => {\n        resolve();\n      });\n    }));\n  }\n\n  detachMap() {\n    if (!this.map) return;\n    this.map.setDiv();\n    this.map.off();\n    this.map.setOptions({\n      'mapType': MapTypeId.NORMAL,\n      'camera': {\n        'target': {\n          'lat': 0,\n          'lng': 0\n        },\n        'zoom': 1,\n        'bearing': 0,\n        'tilt': 0,\n        'padding': 0\n      },\n      'gestures': {\n        'scroll': true,\n        'tilt': true,\n        'rotate': true,\n        'zoom': true\n      },\n      'preferences': {\n        'zoom': null,  // reset min,max zoom\n        'building': true,\n        'clickableIcons': false,  // POI icons clickable = false\n        'restriction': null  // reset restriction\n      }\n    });\n    this.map.clear();\n  }\n}\n"],"sourceRoot":"webpack:///"}
